<?xml version="1.0" encoding="US-ASCII"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
     which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
     There has to be one entity for each item to be referenced. 
     An alternate method (rfc include) is described in the references. -->

<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC5497 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5497.xml">
<!ENTITY RFC8569 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8569.xml">
<!ENTITY RFC8609 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8609.xml">
<!ENTITY I-D.mastorakis-icnrg-icntraceroute SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.mastorakis-icnrg-icntraceroute.xml">
<!ENTITY I-D.irtf-icnrg-icnlowpan SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.irtf-icnrg-icnlowpan.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs), 
     please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
     (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space 
     (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->

<rfc category="exp" docName="draft-gundogan-icnrg-ccnx-timetlv-latest" ipr="trust200902">
  <!-- category values: std, bcp, info, exp, and historic
     ipr values: full3667, noModification3667, noDerivatives3667
     you can add the attributes updates="NNNN" and obsoletes="NNNN" 
     they will automatically be output with "(if approved)" -->

  <!-- ***** FRONT MATTER ***** -->
<front>
    <!-- The abbreviated title is used in the page header - it is only necessary if the 
         full title is longer than 39 characters -->
    <title abbrev="TimeTLV for CCNx">
    Alternative Delta Time Encoding for CCNx Using Compact Floating-Point Arithmetic
    </title>

    <!-- add 'role="editor"' below for the editors if appropriate -->
    <author fullname="Cenk Gundogan" surname="C. Gundogan">
    	<organization>HAW Hamburg</organization>
    	<address>
    		<postal>
    			<street>Berliner Tor 7</street>
    			<city>Hamburg</city>
    			<code>D-20099</code>
    			<country>Germany</country>
    		</postal>
    		<phone>+4940428758067</phone>
    		<email>cenk.guendogan@haw-hamburg.de</email>
    		<uri>http://inet.haw-hamburg.de/members/cenk-gundogan</uri>
    	</address>
    </author>
    <author fullname="Thomas C. Schmidt" initials="TC." surname="Schmidt">
      <organization abbrev="HAW Hamburg">HAW Hamburg</organization>
      <address>
        <postal>
          <street>Berliner Tor 7</street>
          <city>Hamburg</city>
          <code>D-20099</code>
          <country>Germany</country>
        </postal>
        <email>t.schmidt@haw-hamburg.de</email>
        <uri>http://inet.haw-hamburg.de/members/schmidt</uri>
      </address>
    </author>

    <author fullname="Dave Oran" surname="D. Oran">
        <organization>Network Systems Research and Design</organization>
        <address>
            <postal>
                <street>4 Shady Hill Square</street>
                <!-- Reorder these if your country does things differently -->
                <city>Cambridge</city>
                <region>MA</region>
                <code>02138</code>
                <country>USA</country>
            </postal>
            <phone></phone>
            <email>daveoran@orandom.net</email>
        <!-- uri and facsimile elements may also be added -->
        </address>
    </author>

    <author fullname="Matthias Waehlisch" initials="M." surname="Waehlisch">
      <organization abbrev="link-lab &amp; FU Berlin">link-lab &amp; FU
      Berlin</organization>
      <address>
        <postal>
          <street>Hoenower Str. 35</street>
          <city>Berlin</city>
          <code>D-10318</code>
          <country>Germany</country>
        </postal>
        <email>mw@link-lab.net</email>
        <uri>http://www.inf.fu-berlin.de/~waehl</uri>
      </address>
    </author>

    <date month="July" year="2020" />

    <!-- If the month and year are both specified and are the current ones, xml2rfc will fill 
         in the current day for you. If only the current year is specified, xml2rfc will fill 
	 in the current day and month for you. If the year is not the current one, it is 
	 necessary to specify at least a month (xml2rfc assumes day="1" if not specified for the 
	 purpose of calculating the expiry date).  With drafts it is normally sufficient to 
	 specify just the year. -->

    <!-- Meta-data Declarations -->

    <area>IRTF</area>
    <workgroup>ICNRG</workgroup>

    <!-- WG name at the upperleft corner of the doc,
         IETF is fine for individual submissions.  
	 If this element is not present, the default is "Network Working Group",
         which is used by the RFC Editor as a nod to the history of the IETF. -->

    <keyword>template</keyword>

    <!-- Keywords will be incorporated into HTML output
         files in a meta tag but they have no effect on text or nroff
         output. If you submit your draft to the RFC Editor, the
         keywords will be used for the search engine. -->

    <abstract>
       <t>CCNx utilizes delta time for a number of functions. When using CCNx in environments with constrained nodes and/or bandwidth constrained networks, it is valuable to have a compressed representation of delta time. In order to do so, either accuracy or dynamic range has to be sacrificed. Since the current uses of delta time do not require both simultaneously, one can consider a logarithmic encoding such as that specified in <xref target="IEEE.754.2019"/>. This document updates <spanx>CCNx messages in TLV Format</spanx> (RFC8609) to specify this alternative encoding.</t>
<!--This document is a product of the IRTF Information-Centric Networking Research Group (ICNRG). -->
    </abstract>
</front>

<middle>

<section anchor="intro" title="Introduction">

<t>CCNx utilizes time values for a number of functions. Some of these are expressed as absolute time, others as delta time. When using CCNx in environments with constrained nodes and/or bandwidth constrained networks, it is valuable to have a compact representation of time values. For example <xref target="I-D.irtf-icnrg-icnlowpan"/> specifies a compression scheme useful over IEEE 802.15.4 networks. However, any compact time representation has to sacrifice either accuracy or dynamic range or both. For some time uses this is relatively straightforward to achieve, for other uses, it is not. This document discusses the various cases, and proposes a compact encoding that is easily accommodated for delta times, and a more complicated method that can be considered for some uses of absolute time.</t>
</section>

<section title="Requirements Language">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
        "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
        document are to be interpreted as described in <xref target="RFC2119">RFC 2119</xref>.</t>
</section>
<section title="Usage of Time Values in CCNx">
<section anchor="relativeTime" title="Relative Time in CCNx">

<t>CCNx, as currently specified in <xref target="RFC8569"/>, utilizes delta time for only the lifetime of an Interest message (see sections 2.1, 2.2, 2.4.2, 10.3 of <xref target="RFC8569"/>). It is a hop-by-hop header value, and is currently encoded via the T_INTLIFE TLV as a 64-bit integer (<xref target="RFC8609"/> section 3.4.1). While formally an optional TLV, in all but some corner cases every Interest message is expected to carry the Interest Lifetime TLV, and hence having compact encoding is particularly valuable for keeping Interest messages short.</t>

<t>Since the current uses of delta time do not require both accuracy and dynamic range simultaneously, one can consider a logarithmic encoding such as that specified in <xref target="IEEE.754.2019"/> and outlined in <xref target="sec.timetlv"/>. This document updates CCNx messages in TLV Format (<xref target="RFC8609"/>) to permit this alternative encoding for selected time values. See <xref target="IANA"/> for the specific actions needed to register this alternative compact representation of Interest Lifetime.</t>
</section>

<section anchor="absoluteTime" title="Absolute Time in CCNx">
<t>CCNx, as currently specified in <xref target="RFC8569"/>, utilizes absolute time for various important functions. Each of these absolute time usages poses a different challenge for a compact representation. These are discussed in the following subsections.</t>

<section title="Signature Time and Expiry Time">
  <t><spanx>Signature Time</spanx> is the time the signature of a content object was generated (<xref target="RFC8569">sections 8.2-8.4</xref>).
  <spanx>Expiry Time</spanx> indicates the expiry time of a content object (<xref target="RFC8569">section 4</xref>).
  Both values are content message TLVs and represent absolute timestamps in milliseconds since the UTC epoch (i.e., an NTP timestamp).
  They are currently encoded via the T_SIGTIME and T_EXPIRY TLVs as 64-bit unsigned integers (see <xref target="RFC8609"> section 3.6.4.1.4.5</xref> and <xref target="RFC8609"> section 3.6.2.2.2</xref>).</t>

  <t>Both time values could be in the past, or in the future, potentially by a large delta.
  They are also included in the security envelope of the message.
  Therefore, it seems there is no practical way to define an alternative compact encoding that preserves its semantics and security properties; hence we don't consider it further as a candidate.</t>
</section>

<section title="Recommended Cache Time">
  <t><spanx>Recommended Cache Time</spanx> (RCT) for a content object (<xref target="RFC8569">see section 4</xref>) is a hop-by-hop header stating the expiration time for a cached content object in milliseconds since the UTC epoch (i.e., an NTP timestamp). It is currently encoded via the T_CACHETIME TLV as a 64-bit unsigned integer (see <xref target="RFC8609"> section 3.4.2</xref>).</t>

<t>A recommended cache time could be far in the future, but cannot be in the past and is likely to be a reasonably short offset from the current time.
  Therefore, this document allows the recommended cache time to be interpreted as a relative time value rather than an absolute time, since the semantics associated with an absolute time value do not seem to be critical to the utility of this value.
  This document therefore updates the recommended cache time with the following rule set:
  <list style="symbols">
    <t>Use absolute time as per <xref target="RFC8609"/></t>
    <t>Use relative time, if the compact time representation is used (see <xref target="sec.timetlv"/> and <xref target="sec.integration"/>)</t>
  </list>
  </t>
</section>
</section>
</section>
<section title="A Compact Time Representation with Logarithmic Range" anchor="sec.timetlv">
  <t>
    This document defines a compact time representation with logarithmic range support that is inspired by <xref target="RFC5497"/> and <xref target="IEEE.754.2019"/>.
    Compact time codes are one octet wide and represent time values that range from milliseconds to years.
    <xref target="fig.time-value"/> depicts the logarithmic nature of this time representation.
  </t>
  <figure anchor="fig.time-value" title="A logarithmic range representation allows for higher precision in the smaller time ranges and still supports large time deltas.">
    <artwork align="center"><![CDATA[
|| |  |   |    |     |      |       |        |         |          |
+-----------------------------------------------------------------+
milliseconds                                                  years
]]></artwork>
  </figure>
  <t>
    Time codes encode an exponent and a mantissa as illustrated in <xref target="fig.time-code"/>.
    In contrast to the representation in <xref target="IEEE.754.2019"/>, time codes only encode positive numbers and hence do not include an extra sign bit.
  </t>
  <figure anchor="fig.time-code" title="A time code with exponent and mantissa to encode a logarithmic range time representation.">
    <artwork align="center"><![CDATA[
<---      one octet wide     --->
+---+---+---+---+---+---+---+---+
|  exponent (e) |  mantissa (m) |
+---+---+---+---+---+---+---+---+
]]></artwork>
  </figure>
  <t>
    The base unit for time values are seconds. A time value is calculated using the following formula,
    where (e) represents the exponent, (m) the mantissa, (m_max) the maximum mantissa value, and (b) the bias.
    <list style="hanging">
      <t hangText="Subnormal (e == 0):"> (0 + m/m_max) * 2^(1+b)
      </t>
      <t hangText="Normalized (e &gt; 0):"> (1 + m/m_max) * 2^(e+b)
      </t>
    </list>
    The subnormal form is only applied when the exponent is zero.
    This form provides a gradual underflow for the gap between the smallest normalized number and zero.
    The normalized form is applied for all values with an exponent greater than zero.
  </t>
  <t>
    This document allocates <spanx style="verb">5</spanx> bits for the exponent and <spanx style="verb">3</spanx> bits for the mantissa.
    Therefore, exponents have the range [0,31] and mantissae have the range [0,7].
    This document further applies a bias of <spanx style="verb">-5</spanx>.
    The following properties result from this configuration:
    <list style="symbols">
      <t>Minimum subnormal number:   0 seconds</t>
      <t>Maximum subnormal number:  ~0.054688 seconds</t>
      <t>Minimum normalized number: ~0.062500 seconds</t>
      <t>Maximum normalized number: ~3.99 years</t>
    </list>
    Eight time values exist in the subnormal range [0,~0.054688s] with a step size of ~0.007813s between each time value.
    In addition, this configuration also encodes the following convenient numbers in seconds: [1, 2, 4, 8, 16, 32, 64, ...].
  </t>
  <t>
    An example algorithm to encode a time value into the corresponding exponent and mantissa is given as pseudo code in <xref target="fig.algo"/>.
    Not all time values can be represented by a time code.
    For these instances, the closest time code is chosen that is smaller than the value to encode.
  </t>
  <figure anchor="fig.algo" title="Algorithm in pseudo code.">
    <artwork align="center"><![CDATA[
 input: float v    // time value
output:   int e, m // exponent, mantissa of time code

(e, m) encode (v):

    if (v == 0)
        return (0, 0)

    if (v < 0.0625)
        m = floor ((v * 2^7))           // round down
        return (0, m)
    else
        e = floor (log2(v))             // round down
        m = floor (((v / 2^e - 1) * 8)) // round down
        return (e + 5, m)               // add bias
]]></artwork>
  </figure>
  <t>
    As an example: No specific time code for <spanx style="verb">0.063</spanx> exists, but this algorithm maps to the closest valid time code that is smaller, i.e., exponent <spanx style="verb">1</spanx> and mantissa <spanx style="verb">0</spanx> (the same as for time value <spanx style="verb">0.0625</spanx>).
  </t>
</section>
<section title="Protocol Integration of the Compact Time Representation in CCNx Messages" anchor="sec.integration">
    <t>A straightforward way to accommodate the compact time approach as an alternative encoding is to simply allow a 1-byte length as an alternative to the 8-byte length while retaining the existing TLV registry entries.
    This approach has backward compatibility problems, but may still be considered for the following reasons:
    <list style="symbols">
      <t>Both CCNx RFCs are experimental and not Standards Track, hence expectations for forward and backward compatibility are not as stringent. "Flag day" upgrades of deployed CCNx networks, while inconvenient, are still feasible.</t>
      <t>The major use case for these compressed encodings are smaller-scale IoT and/or sensor networks where the population of consumers, producers, and forwarders is reasonably small.</t>
      <t>Since the current TLVs have hop-by-hop semantics, they are not covered by any signed hash and hence may be freely re-encoded by any forwarder. That means a forwarder supporting the new encoding can translate freely between the two encodings.</t>
      <t>The alternative of assigning new TLV registry values does not substantially mitigate the interoperability problems anyway.</t>
    </list>
    </t>
  <t>The following lists alternative approaches of integrating the compact time representation for time offsets in CCNx messages.
  A further analysis, discussion, and decision on the best suited approach will be added as the document progresses.
  <list style="numbers">
    <t>Relative time TLVs (e.g., T_INTLIFETIME) include nested TLVs to hint at the used encoding.
    This approach is the least intrusive integration, but adds a TLV overhead that negates the benefits of the compact time representation.</t>
    <t>A new TLV type for T_INTLIFETIME with a compact time representation (T_INTLIFETIME_COMPACT) is defined.
    The packet header grammar from <xref target="RFC8609"/> is updated to allow for T_INTLIFETIME_COMPACT at the same level of the currently defined T_INTLIFETIME with an exclusive or.</t>
  </list>
  </t>
</section>
<section anchor="IANA" title="IANA Considerations">
  <t>Based on the approach of integration, certain TLV registries from <xref target="RFC8609"/> need to be updated.</t>
<?ignore
  <t>Please change the registry for the T_INTLIFE to permit a length of 1 in addition to a length of 8, as follows:.</t>
  <figure anchor="timetlv-encoding" title="Alternate Delta Time encoding.">
    <preamble>.</preamble>
    <artwork align="left"><![CDATA[
                     1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+---------------+---------------+---------------+---------------+
|             T_INTLIFE         |               1               |
+---------------+---------------+---------------+---------------+
| INTERVAL_TIME |
+---------------+
]]></artwork>
  </figure>
?>
</section>

<section anchor="Security" title="Security Considerations">
	<t>This document makes no semantic changes to <xref target="RFC8569"/>, nor to any of the security properties of the message encodings of <xref target="RFC8609"/>, and hence has the same security considerations as those two existing documents.
	</t>
</section>

</middle>

  <!--  *****BACK MATTER ***** -->

<back>
    <!-- References split into informative and normative -->

    <!-- There are 2 ways to insert reference entries from the citation libraries:
     1. define an ENTITY at the top, and use "ampersand character"RFC2629; here (as shown)
     2. simply use a PI "less than character"?rfc include="reference.RFC.2119.xml"?> here
        (for I-Ds: include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")

     Both are cited textually in the same manner: by using xref elements.
     If you use the PI option, xml2rfc will, by default, try to find included files in the same
     directory as the including file. You can also define the XML_LIBRARY environment variable
     with a value containing a set of directories to search.  These can be either in the local
     filing system or remote ones accessed by http (http://domain/dir/... ).-->

    <references title="Normative References">
      &RFC2119;
      &RFC5497;
      &RFC8569;
      &RFC8609;
      <reference anchor="IEEE.754.2019"
                 target="https://standards.ieee.org/content/ieee-standards/en/standard/754-2019.html">
        <front>
          <title>Standard for Floating-Point Arithmetic</title>
          <author initials="" fullname=""
                  surname="Institute of Electrical and Electronics Engineers, C/MSC - Microprocessor Standards Committee"/>
          <date month="June" year="2019"/>
        </front>
      </reference>
    </references>

    <references title="Informative References">
      &I-D.irtf-icnrg-icnlowpan;
    </references>

    <section anchor="sec.testvectors" title="Test Vectors">
      <t>
        The test vecotrs in <xref target="tab.testvectors"/> show sample time codes and their corresponding time values according to the algorithm outlined in <xref target="sec.timetlv"/>.
      </t>

      <texttable anchor="tab.testvectors"
                 title="Test Vectors">
        <ttcol align="center">Time Code</ttcol>

        <ttcol align="right">Time Value (seconds)</ttcol>

        <c>0x00</c>
        <c>0.000000</c>

        <c>0x04</c>
        <c>0.031250</c>

        <c>0x08</c>
        <c>0.062500</c>

        <c>0x15</c>
        <c>0.203125</c>

        <c>0x28</c>
        <c>1.000000</c>

        <c>0x30</c>
        <c>2.000000</c>

        <c>0xF8</c>
        <c>67108864.000000</c>

        <c>0xFF</c>
        <c>125829120.000000</c>
      </texttable>
    </section>
    <!-- Change Log
v00 2019-10-03  DRO   Initial version-->
</back>
</rfc>
		
